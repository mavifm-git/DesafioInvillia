@model Desafio.WebApp.ViewModels.EmprestimoViewModel

@{
    ViewData["Title"] = "Devolução de Empréstimo";
}


<h4>@ViewData["Title"]</h4>
<hr />
<div class="row">
    <div class="col-md-10">
        <dl class="row">
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Jogo)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.Jogo.Nome)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Pessoa)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.Pessoa.Nome)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.DataEmprestimo)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.DataEmprestimo)
            </dd>
        </dl>
        <form asp-action="Devolution">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="JogoId" />
            <input type="hidden" asp-for="PessoaId" />
            <input type="hidden" asp-for="DataEmprestimo" />

            <div class="form-group">
                <label asp-for="DataDevolucao" class="control-label"></label>
                <input asp-for="DataDevolucao" type="date" class="form-control" />
                <span asp-validation-for="DataDevolucao" class="text-danger"></span>
            </div>

            <div class="form-group">

                <input type="submit" value="Devolver" class="btn btn-primary" />
                <a class="btn btn-info" asp-action="Index">Voltar</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
